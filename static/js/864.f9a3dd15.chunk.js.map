{"version":3,"file":"static/js/864.f9a3dd15.chunk.js","mappings":"8PAEMA,EAAU,gCACVC,EAAU,mCAEHC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACmBC,EADnB,YADE,uBACjBG,EADiB,EACjBA,KADiB,kBAKlBA,EAAKC,SALa,2CAAH,qDAQjB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,8BACWO,EADX,oBAC4BN,EAD5B,2BADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,IAAMG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACFS,EADE,oBACYR,EADZ,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,wKCgC9B,EA5Ca,WACX,OAAoCM,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGKZ,EAAAA,EAAAA,MAHL,OAGViB,EAHU,OAIhBP,GAAc,OAAIO,IAJF,gDAMhBC,EAAAA,GAAAA,MAAY,yBACZJ,EAAW,KAAMK,SAPD,yBAShBP,GAAa,GATG,4EAAH,qDAYjBI,GACD,GAAE,KAGD,iCACE,wBAAI,mBACHL,GACC,SAACS,EAAA,EAAD,KAEA,wBACGX,EAAWY,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,MAAP,OACd,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAahB,GAAxB,SAA+Be,KADxBf,EADK,MAOnBM,IACC,uBAAG,uEAGL,SAAC,KAAD,CAAgBW,UAAW,QAGhC,C","sources":["components/Api/Api.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0bf4740b0505867b66253771331711d6';\n\nexport const fetchTrends = async () => {\n  const { data } = await axios.get(\n    `${API_URL}trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n\n  return data.results;\n};\n\nexport async function fetchSearch(query) {\n  const { data } = await axios.get(\n    `${API_URL}search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n}\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchTrends } from 'components/Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Home = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await fetchTrends();\n        setMoviesList([...movies]);\n      } catch (error) {\n        toast.error('Something went wrong!');\n        setIsError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul>\n          {moviesList.map(({ id, title }) => (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`}>{title}</NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n      {isError && (\n        <p>'The service is temporarily unavailable. Please try again later.'</p>\n      )}\n\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["API_URL","API_KEY","fetchTrends","axios","data","results","fetchSearch","query","fetchMovieDetails","id","useState","moviesList","setMoviesList","isLoading","setIsLoading","isError","setIsError","useEffect","fetchMovies","movies","toast","message","Loader","map","title","to","autoClose"],"sourceRoot":""}